{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comment","email","className","name","href","body","CommentList","comments","map","id","UserInfo","user","userEmail","PostInfo","post","title","length","PostList","posts","postsFromServer","userId","usersFromServer","find","postId","commentsFromServer","filter","App","ReactDOM","render","document","getElementById"],"mappings":"408IAAaA,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtBC,EAAK,iBAAaD,EAAQC,OAEhC,OACE,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SACGF,EAAQG,OAGV,OAED,mBACED,UAAU,qBACVE,KAAMH,EAFR,SAIGD,EAAQC,WAIb,qBAAKC,UAAU,oBAAf,SACGF,EAAQK,WClBJC,G,MAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,qBAAKL,UAAU,cAAf,SACGK,EAASC,KAAI,SAAAR,GAAO,OACnB,cAAC,EAAD,CAAaA,QAASA,GAAcA,EAAQS,WCJrCC,G,MAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACnBC,EAAS,iBAAaD,EAAKV,OAEjC,OACE,8BACG,eAED,mBAAGC,UAAU,WAAWE,KAAMQ,EAA9B,SACGD,EAAKR,YCNDU,G,MAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,sBAAKZ,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SACGY,EAAKC,QAGR,cAAC,EAAD,CAAUJ,KAAMG,EAAKH,UAGvB,mBAAGT,UAAU,iBAAb,SACGY,EAAKT,OAGPS,EAAKP,SAASS,OAAS,EACtB,cAAC,EAAD,CAAaT,SAAUO,EAAKP,WAE5B,qCACE,uBAEA,mBAAG,UAAQ,oBAAX,qCCtBKU,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKhB,UAAU,WAAf,SACGgB,EAAMV,KAAI,SAAAM,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKL,UCY/B,IAAMS,EAAQC,EAAgBX,KAAI,SAAAM,GAAI,kCACxCA,GADwC,IAE3CH,MAZmBS,EAYDN,EAAKM,OAXhBC,EAAgBC,MAAK,SAAAX,GAAI,OAAIA,EAAKF,KAAOW,MACzC,MAWPb,UAR2BgB,EAQGT,EAAKL,GAP5Be,EAAmBC,QAAO,SAAAlB,GAAQ,OAAIA,EAASgB,SAAWA,MAC1D,MAFT,IAA6BA,EALRH,KAgBRM,EAAM,kBACjB,0BAASxB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCAEA,cAAC,EAAD,CAAUgB,MAAOA,QCvBrBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2dedca86.chunk.js","sourcesContent":["export const CommentInfo = ({ comment }) => {\n  const email = `mailto:${comment.email}`;\n\n  return (\n    <div className=\"CommentInfo\">\n      <div className=\"CommentInfo__title\">\n        <strong className=\"CommentInfo__name\">\n          {comment.name}\n        </strong>\n\n        {' by '}\n\n        <a\n          className=\"CommentInfo__email\"\n          href={email}\n        >\n          {comment.email}\n        </a>\n      </div>\n\n      <div className=\"CommentInfo__body\">\n        {comment.body}\n      </div>\n    </div>\n  );\n};\n","import { CommentInfo } from '../CommentInfo';\nimport './CommentList.scss';\n\nexport const CommentList = ({ comments }) => (\n  <div className=\"CommentList\">\n    {comments.map(comment => (\n      <CommentInfo comment={comment} key={comment.id} />\n    ))}\n  </div>\n);\n","import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => {\n  const userEmail = `mailto:${user.email}`;\n\n  return (\n    <p>\n      {' Posted by  '}\n\n      <a className=\"UserInfo\" href={userEmail}>\n        {user.name}\n      </a>\n    </p>\n  );\n};\n","import { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\nimport './PostInfo.scss';\n\nexport const PostInfo = ({ post }) => (\n  <div className=\"PostInfo\">\n    <div className=\"PostInfo__header\">\n      <h3 className=\"PostInfo__title\">\n        {post.title}\n      </h3>\n\n      <UserInfo user={post.user} />\n    </div>\n\n    <p className=\"PostInfo__body\">\n      {post.body}\n    </p>\n\n    {post.comments.length > 0 ? (\n      <CommentList comments={post.comments} />\n    ) : (\n      <>\n        <hr />\n\n        <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n      </>\n    )}\n\n  </div>\n);\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts.map(post => (\n      <PostInfo post={post} key={post.id} />\n    ))}\n  </div>\n);\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\nimport { PostList } from './components/PostList';\n\nfunction getUserById(userId) {\n  return usersFromServer.find(user => user.id === userId)\n      || null;\n}\n\nfunction getCommentsByPostId(postId) {\n  return commentsFromServer.filter(comments => comments.postId === postId)\n      || [];\n}\n\nexport const posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUserById(post.userId),\n  comments: getCommentsByPostId(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}